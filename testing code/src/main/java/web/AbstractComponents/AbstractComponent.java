package web.AbstractComponents;

import org.openqa.selenium.*;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;

import static web.constants.PageConstants.*;

/**
 * the class which is used by most of pageObject classes (collecting common functionality between pages into one class)
 */
public class AbstractComponent {

    /**
     * this is the driver which is used in interacting with the browser
     */
    protected WebDriver driver;


    /**
     * this is the home icon web element
     */
    @FindBy(css = HOMEPAGE_ICON_CSS)
    protected WebElement homeIcon;

    /**
     * this is the dropdown menu web element that will show the communities
     */
    @FindBy(xpath = COMMUNITIES_SELECT_XPATH)
    protected WebElement communitiesDropDownIcon;

    /**
     * this is the search bar web element through which you can search for something
     */
    @FindBy(id = SEARCHBAR_ID)
    protected WebElement SearchBar;

    /**
     * this is the popular icon web element through which you see what's trending
     */
    @FindBy(css = POPULAR_CSS)
    protected WebElement popularIcon;

    /**
     * this is the coins icon web element through which you can see any operation related to coins
     */
    @FindBy(css = COINS_ICON_CSS)
    protected WebElement coinsIcon;

    /**
     * this is the happen now icon web element through which you can talks that are happening now
     */
    @FindBy(xpath = HAPPEN_NOW_XPATH)
    protected WebElement happenNowIcon;

    /**
     * this is the moderation icon web element through which you can navigate to your moderation page
     */
    @FindBy(css = MODERATION_CSS)
    protected WebElement moderationIcon;

    /**
     * this is the chat icon web element through which you can open your chats
     */
    @FindBy(xpath = CHAT_XPATH)
    protected WebElement charIcon;

    /**
     * this is the notification icon web element through which you can see your notifications
     */
    @FindBy(xpath = NOTIFICATION_XPATH)
    protected WebElement notificationIcon;

    /**
     * this is the create post icon web element through which you can create a post
     */
    @FindBy(xpath = CREATE_POST_XPATH)
    protected WebElement createPostIcon;

    /**
     * this is the advertise post icon web element through which you can advertise something
     */
    @FindBy(xpath = ADVERTISE_XPATH)
    protected WebElement advertiseIcon;

    /**
     * this is the user dropdown icon web element through which you can see all user information
     */
    @FindBy(xpath = USER_DATA_XPATH)
    protected WebElement userDataDropDownIcon;

    /**
     * this is the popular now icon web element through which you can see what's popular now and trendy if you aren't signed in
     */
    @FindBy(css = POPULAR_NOW_CSS)
    protected WebElement popularNowIcon;

    /**
     * this is the login in button through which you can login into your account
     */
    @FindBy(xpath = "//button[text()='log in']")
    protected WebElement loginButton;

    /**
     * this is the signup button through which you can create email
     */
    @FindBy(xpath = SIGNUP_BUTTON_XPATH)
    protected WebElement signupButton;




    /**
     * this is the constructor of the class and it initializes all of its members using PageFactory class
     * @param driver : which is generated by selenium testcase
     */
    public AbstractComponent(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
    }

    /**
     * this function is used to make the driver wait until a specific webElement disappears
     * @param webElement: this is the Web Element through which we will wait on
     * @param timeOutInSeconds: this is the timeout in seconds as explicit wait will terminate as waitTime passes this time
     */
    public void waitForWebElementToDisappear(WebElement webElement, int timeOutInSeconds){
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(timeOutInSeconds));
        wait.until(ExpectedConditions.invisibilityOf(webElement));

    }

    /**
     * this function is used to make the driver wait until a specific webElement appears
     * @param webElement: this is the Web Element through which we will wait on
     * @param timeOutInSeconds: this is the timeout in seconds as explicit wait will terminate as waitTime passes this time
     */
    public void waitForWebElementToAppear(WebElement webElement, int timeOutInSeconds){
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(timeOutInSeconds));
        wait.until(ExpectedConditions.visibilityOf(webElement));
    }

    /**
     * this function is used to make the driver wait until an iframe appears
     * @param iframe: this is the Iframe WebElement to wait on
     * @param timeOutInSeconds: this is the timeout in seconds as explicit wait will terminate as waitTime passes this time
     */
    public void waitForFrameToBeAvailable(WebElement iframe, int timeOutInSeconds){
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(timeOutInSeconds));
        wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(iframe));
    }

    /**
     * this function is used to make the driver wait until a findBy Element disappears
     * @param findBy: this is a locator through which we will wait on
     * @param timeOutInSeconds: this is the timeout in seconds as explicit wait will terminate as waitTime passes this time
     */
    public void waitByElementToDisappear(By findBy, int timeOutInSeconds){
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(timeOutInSeconds));
        wait.until(ExpectedConditions.invisibilityOfElementLocated(findBy));
    }

    /**
     * this function is used to make the driver wait until a findBy Element appears
     * @param findBy: this is a locator through which we will wait on
     * @param timeOutInSeconds: this is the timeout in seconds as explicit wait will terminate as waitTime passes this time
     */
    public void waitByElementToAppear(By findBy, int timeOutInSeconds){
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(timeOutInSeconds));
        wait.until(ExpectedConditions.invisibilityOfElementLocated(findBy));
    }

    /**
     * this is a function to cause the thread to sleep
     * @param timeOutInSeconds: this the time that will cause the thread to sleep
     * @throws InterruptedException: this is exception thrown by the Thread.sleep function
     */
    public void threadSleep(int timeOutInSeconds)  {
        try {
            Thread.sleep((timeOutInSeconds * 1000L));
        }catch (InterruptedException e){
            e.printStackTrace();
        }

    }

    /**
     * this function could tell you if there is an alert or no
     * @return boolean: to indicate if there is an alert or not
     */
    public boolean isThereAnAlert(){
        Alert alert = ExpectedConditions.alertIsPresent().apply(driver);
        return alert != null;
    }

}