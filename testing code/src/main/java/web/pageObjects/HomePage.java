package web.pageObjects;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import web.AbstractComponents.AbstractComponent;
import web.constants.PageConstants;

import java.util.List;

public class HomePage extends AbstractComponent {

    /**
     * this the driver that's used to to automate the tests
     */
    WebDriver driver;

    @FindBy(id = PageConstants.NULL_LOCATOR)
    List<WebElement> posts;

    @FindBy(id = PageConstants.NULL_LOCATOR)
    By commentButton;

    /**
     * this is the constructor of the class and it initializes all of its members using PageFactory class
     *
     * @param driver : which is generated by selenium testcase
     */
    public HomePage(WebDriver driver) {
        super(driver);
        this.driver = driver;
    }


    /**
     * this methods clicks on one of the post to enter into it
     * @param postIndex: this is the index of the post in the home page
     * @return PostDetails: which is the object of view of the post details
     */
    public PostDetails checkPost(int postIndex){
        try {
            posts.get(postIndex).click();
            return new PostDetails(driver);
        }catch (Exception e){
            return null;
        }
    }

    /**
     * this methods visits a post with at least specific number of comments
     * @param commentsNum: the at least number needed for post to be visited
     * @return PostDetails: which is the object of view of the post details
     */
    public PostDetails checkPostWithAtLeastNumOfComments(int commentsNum){
        for (WebElement element : posts){
            if(Integer.parseInt(element.findElement(commentButton).getText()) >= commentsNum){
                element.click();
                return new PostDetails(driver);
            }
        }
        return null;
    }
}
