package web.pageObjects;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import web.AbstractComponents.AbstractComponent;

public class web_Profile extends AbstractComponent {

    @FindBy(xpath = "/html/body/div[1]/div[2]/div/div[2]/div[1]/div[2]/span")
    WebElement Name;

    @FindBy(xpath = "//*[@id=\"root\"]/div[2]/div/div[2]/div[1]/div[2]/div[2]/div[3]/div/span")
    WebElement Followers;

    @FindBy(xpath = "")
    WebElement SearchFollower;

    @FindBy(xpath = "")
    WebElement SearchResultFollower;

    @FindBy(xpath = "//button[text()='overview']")
    WebElement OverViewButton;

    @FindBy(xpath = "/html/body/div[1]/div[1]/header/div/button[3]")
    WebElement CommentsButton;

    @FindBy(xpath = "/html/body/div[1]/div[1]/header/div/button[2]")
    WebElement PostsButton;

    @FindBy(xpath = "/html/body/div[1]/div[1]/header/div/button[4]")
    WebElement HistoryButton;

    @FindBy(xpath = "/html/body/div[1]/div[1]/header/div/button[5]")
    WebElement SavedButton;

    @FindBy(xpath = "/html/body/div[1]/div[1]/header/div/button[8]")
    WebElement DownVotedButton;

    @FindBy(xpath = "/html/body/div[1]/div[1]/header/div/button[6]")
    WebElement HiddenButton;

    @FindBy(xpath = "/html/body/div[1]/div[1]/header/div/button[7]")
    WebElement UpVotedButton;

    @FindBy(xpath = "/html/body/div[1]/div[2]/div/div[2]/div[1]/div[2]/div[1]/a/svg/path")
    WebElement SettingsButton;

    /**
     * this is the constructor of the class and it initializes all of its members using PageFactory class
     *
     * @param driver : which is generated by selenium testcase
     */
    public web_Profile(WebDriver driver) {
        super(driver);
    }


    public boolean checkName(String LoggedInName) {
        waitForWebElementToAppear(Name,1);
        return Name.getText() .equals(LoggedInName);
    }

    public String getFollowers() {
        ///to int in java
        waitForWebElementToAppear(Followers,1);
        return Followers.getText();
    }

    public boolean checkFollowers(String FollowerName) {
        Followers.click();
        SearchFollower.sendKeys(FollowerName);
        if (SearchResultFollower.isDisplayed()) {
            if (SearchResultFollower.getText() == FollowerName) {
                SearchResultFollower.click();
                return checkName(FollowerName);
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public boolean checkCommentsButton() {

        waitForWebElementToAppear(DownVotedButton,1);
        if (CommentsButton.isDisplayed()) {
            CommentsButton.click();
            threadSleep(1);
            if (driver.findElement(By.xpath("/html/body/div[1]/div[2]/div/div[1]/div[5]/p")).getText().equals( "hmm... u/Immediate_Rhubarb_77 hasn't commented on anything")&&
                    CommentsButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public boolean checkHistoryButton() {
        waitForWebElementToAppear(HistoryButton,1);
        if (HistoryButton.isDisplayed()) {
            HistoryButton.click();
            threadSleep(1);
            if (driver.findElement(By.xpath("//*[@id=\"root\"]/div[2]/div/div[1]/div[5]/p")).getText().equals( "hmm... looks like you haven't recently viewed anything yet")&&
                    HistoryButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public boolean checkPostsButton() {
        waitForWebElementToAppear(PostsButton,1);
        if (PostsButton.isDisplayed()) {
            PostsButton.click();
            threadSleep(1);

            if (driver.findElement(By.xpath("/html/body/div[1]/div[2]/div/div[1]/div[5]/p")).getText().equals( "hmm... u/Immediate_Rhubarb_77 hasn't posted recently")&&
                    PostsButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public boolean checkSavedButton() {
        waitForWebElementToAppear(SavedButton,1);
        if (SavedButton.isDisplayed()) {
            SavedButton.click();
            threadSleep(1);
            System.out.println(SavedButton.getCssValue("color"));
            threadSleep(1);

            if (driver.findElement(By.xpath("/html/body/div[1]/div[2]/div/div[1]/div[4]/p")).getText().equals( "hmm... looks like you haven't saved anything yet")&&
                    SavedButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public boolean checkHiddenButton() {
        waitForWebElementToAppear(HiddenButton,1);
        if (HiddenButton.isDisplayed()) {
            HiddenButton.click();
            threadSleep(1);
            if (driver.findElement(By.xpath("/html/body/div[1]/div[2]/div/div[1]/div[4]/p")).getText().equals( "hmm... looks like you haven't Hidden anything yet")&&
                    HiddenButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public boolean checkUpVotedButton() {
        waitForWebElementToAppear(UpVotedButton,1);
        if (UpVotedButton.isDisplayed()) {
            UpVotedButton.click();
            threadSleep(1);
            if (driver.findElement(By.xpath("/html/body/div[1]/div[2]/div/div[1]/div[4]/p")).getText().equals( "hmm... looks like you haven't upvoted anything yet")&&
                    UpVotedButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {

                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }



    public boolean checkDownVotedButton() {
        waitForWebElementToAppear(DownVotedButton,1);
        if (DownVotedButton.isDisplayed()) {
            DownVotedButton.click();
            threadSleep(1);
            if (driver.findElement(By.xpath("/html/body/div[1]/div[2]/div/div[1]/div[4]/p")).getText().equals( "hmm... looks like you haven't downvoted anything yet")&&
                    DownVotedButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public boolean checkOverViewButton() {
        waitForWebElementToAppear(OverViewButton,1);
        if (OverViewButton.isDisplayed()) {
            OverViewButton.click();
            threadSleep(1);
            if (driver.findElement(By.xpath("/html/body/div[1]/div[2]/div/div[1]/div[5]/p")).getText().equals( "hmm... u/Immediate_Rhubarb_77 hasn't posted recently")&&
            OverViewButton.getCssValue("color").equals("rgba(0, 121, 211, 1)")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;

        }

    }

    public void gotoSettings(){
        waitForWebElementToAppear(SettingsButton,1);
        if(SettingsButton.isDisplayed()){
            SettingsButton.click();
            threadSleep(1);
        }
    }

    public void addSocialLink(String Url){

    }

}
